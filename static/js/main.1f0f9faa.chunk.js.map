{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","classname","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","names","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAqBeA,MAff,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAE3C,qBACIA,UAAU,eAAeG,IAAI,wEAAwEC,IAAI,KAC7G,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQG,UAAU,uB,0DCTvCC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,0B,MCwCEC,MAtCf,WACI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,iBADhC,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAMZC,KACD,IASC,qBAAKnB,UAAU,cAAf,SACI,qBAAKA,UAAU,4BAAf,SACKY,EAAOQ,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACIrB,UAAU,QAEVsB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAdHC,EAcuBJ,EAAOK,UAbpDC,QAAQC,IAAI,YAAaH,GADd,IAAWA,GAeNI,iBAAkB,kBAZlBC,EAYmCT,EAAOK,UAX1DC,QAAQC,IAAIE,EAAQ,oBADL,IAACA,GAOJ,SAMI,qBAAKC,MAAS,CAACC,gBAAgB,OAAD,OAASX,EAAOY,OAAhB,MAA4BjC,UAAU,OAApE,SACI,6BAAKqB,EAAOK,UALXL,EAAOK,c,6FCErBQ,MAtBf,WACI,OACI,sBAAKlC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,YAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,UAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,UAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,WAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,eAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCLvBiC,MAdf,WACE,OAEE,cADA,CACA,OAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,QCFSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f0f9faa.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <IconButton>\r\n                <PersonIcon fontSize=\"large\" className=\"header__icon\"/>\r\n            </IconButton>\r\n            <img\r\n                className=\"header__logo\" src=\"https://1000logos.net/wp-content/uploads/2018/07/Tinder_logo_PNG1.png\" alt=\"\"/>\r\n            <IconButton>\r\n                <ForumIcon fontSize=\"large\" classname=\"header__icon\"/>\r\n            </IconButton>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8001\"\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect} from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport axios from './axios';\r\nimport './TinderCards.css';\r\n\r\nfunction TinderCards() {\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const req = await axios.get('/tinder/cards');\r\n\r\n            setPeople(req.data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const swiped = (direction,nameToDelete) => {\r\n        console.log(\"removing \"+ nameToDelete);\r\n    };\r\n    const outOfFrame = (names) => {\r\n        console.log(names + \" left the screen\");\r\n    }\r\n    return (\r\n        <div className=\"tinderCards\">\r\n            <div className=\"tinderCards_cardContainer\">\r\n                {people.map((person) => (\r\n                    <TinderCard\r\n                        className=\"swipe\"\r\n                        key={person.name}\r\n                        preventSwipe={[\"up\",\"down\"]}\r\n                        onSwipe={(dir) => swiped(dir,person.name)}\r\n                        onCardLeftScreen={() => outOfFrame(person.name)}>\r\n                        <div style = {{backgroundImage: `url(${person.imgUrl})`}} className=\"card\">\r\n                            <h3>{person.name}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react';\r\nimport './SwipeButtons.css';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"sb_repeat\">\r\n                <ReplayIcon fontSize='large' />\r\n            </IconButton>\r\n            <IconButton className=\"sb_left\">\r\n                <CloseIcon fontSize='large' />\r\n            </IconButton>\r\n            <IconButton className=\"sb_star\">\r\n                <StarRateIcon fontSize='large' />\r\n            </IconButton>\r\n            <IconButton className=\"sb_right\">\r\n                <FavoriteIcon fontSize='large' />\r\n            </IconButton>\r\n            <IconButton className=\"sb_lightning\">\r\n                <FlashOnIcon fontSize='large' />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Header.js\";\nimport TinderCards from './TinderCards.js';\nimport SwipeButtons from './SwipeButtons';\n\nfunction App() {\n  return (\n    //BEM naming convention\n    <div className=\"app\">\n      <Header />\n\n      <TinderCards />\n\n      <SwipeButtons />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}